{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web_Data_Management\\\\Project_Code\\\\wdm_project\\\\urm_app\\\\src\\\\pages\\\\CandidateJobApplied.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport CandidateHeader from './CandidateHeader';\nimport IndexFooter from './IndexFooter';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CandidateJobApplied() {\n  _s();\n  const userID = window.localStorage.getItem(\"userId\");\n\n  // State to store the job data received from the API\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const data = {\n      userId: userID\n    };\n    console.log(data);\n\n    // Call the API to fetch the job data\n    axios.post('http://localhost/application_fetch.php', data).then(response => {\n      if (response.data.status === 'success') {\n        // Job data fetched successfully, update the jobs state\n        setJobs(response.data.jobs);\n      } else {\n        // Handle the case where no job data is found or there's an error\n        console.error(response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  useEffect(() => {\n    const jobIDs = jobs.map(job => job.positionID);\n    axios.post('http://localhost/job_name_fetch.php', {\n      jobIDs\n    }).then(response => {\n      if (response.data.status === 'success') {\n        setJobs(prevJobs => {\n          return prevJobs.map(job => {\n            const updatedJob = response.data.jobs.find(updatedJob => updatedJob.positionID === job.positionID);\n            if (updatedJob) {\n              return {\n                ...job,\n                title: updatedJob.title,\n                description: updatedJob.description\n              };\n            }\n            return job;\n          });\n        });\n      } else {\n        console.log('no data fetched');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, [jobs]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Applications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CandidateHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"jobsearch\",\n        className: \"tile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-applied\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Job Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Institution\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date_Applied\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job.dateApplied\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, job.positionID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IndexFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(CandidateJobApplied, \"7HEm64GR/ROgwE6FirudX0cym4Q=\");\n_c = CandidateJobApplied;\nexport default CandidateJobApplied;\nvar _c;\n$RefreshReg$(_c, \"CandidateJobApplied\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Link","CandidateHeader","IndexFooter","axios","jsxDEV","_jsxDEV","CandidateJobApplied","_s","userID","window","localStorage","getItem","jobs","setJobs","data","userId","console","log","post","then","response","status","error","message","catch","jobIDs","map","job","positionID","prevJobs","updatedJob","find","title","description","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","dateApplied","_c","$RefreshReg$"],"sources":["E:/Web_Data_Management/Project_Code/wdm_project/urm_app/src/pages/CandidateJobApplied.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport CandidateHeader from './CandidateHeader';\r\nimport IndexFooter from './IndexFooter';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CandidateJobApplied() {\r\n\r\n    const userID = window.localStorage.getItem(\"userId\");\r\n\r\n\r\n    // State to store the job data received from the API\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const data = {\r\n            userId: userID,\r\n        };\r\n        console.log(data)\r\n\r\n        // Call the API to fetch the job data\r\n        axios.post('http://localhost/application_fetch.php', data)\r\n            .then((response) => {\r\n                if (response.data.status === 'success') {\r\n                    // Job data fetched successfully, update the jobs state\r\n                    setJobs(response.data.jobs);\r\n                } else {\r\n                    // Handle the case where no job data is found or there's an error\r\n                    console.error(response.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }, []);\r\n    useEffect(() => {\r\n        const jobIDs = jobs.map(job => job.positionID);\r\n        axios.post('http://localhost/job_name_fetch.php', {jobIDs})\r\n            .then(response => {\r\n                if (response.data.status === 'success') {\r\n                    setJobs(prevJobs => {\r\n                        return prevJobs.map(job => {\r\n                            const updatedJob = response.data.jobs.find(updatedJob => updatedJob.positionID === job.positionID);\r\n                            if (updatedJob) {\r\n                                return { ...job, title: updatedJob.title, description: updatedJob.description };\r\n                            }\r\n                            return job;\r\n                        });\r\n                    });\r\n                }\r\n                else{\r\n                    console.log('no data fetched');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }, [jobs]);\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <header>\r\n                <div className=\"header-container\">\r\n                    <h1>Applications</h1>\r\n                    <CandidateHeader />\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                {/* <!-- Jobs Applied Content --> */}\r\n                <section id=\"jobsearch\" className=\"tile\">\r\n                    \r\n\r\n                    {/* <!-- Job Applied Table --> */}\r\n                    <div className=\"job-applied\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Job Title</th>\r\n                                    <th>Institution</th>\r\n                                    <th>Description</th>\r\n                                    <th>Status</th>\r\n                                    <th>Date_Applied</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {jobs.map((job) => (\r\n                                    <tr key={job.positionID}>\r\n                                        <td>{job.title}</td>\r\n                                        <td>{job.name}</td>\r\n                                        <td>{job.description}</td>\r\n                                        <td>{job.status}</td>\r\n                                        <td>{job.dateApplied}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n\r\n            <IndexFooter />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default CandidateJobApplied;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}