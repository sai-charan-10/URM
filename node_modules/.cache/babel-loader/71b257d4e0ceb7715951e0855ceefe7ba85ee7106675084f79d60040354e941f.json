{"ast":null,"code":"const RegisterValidation = values => {\n  const errors = {};\n\n  // Validate name field\n  if (!values.name.trim()) {\n    errors.name = \"Name is required\";\n  }\n\n  // Validate email field\n  if (!values.email.trim()) {\n    errors.email = \"Email is required\";\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(values.email)) {\n    errors.email = \"Invalid email format\";\n  }\n\n  //validate phone number field\n  if (!values.phoneNumber) {\n    errors.phoneNumber = \"Phone number is required\";\n  } else if (!/^[0-9]{10}$/.test(values.phoneNumber)) {\n    errors.phoneNumber = \"Invalid phone number format\";\n  }\n\n  // Validate password field\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/.test(values.password)) {\n    errors.password = \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, and one number\";\n  }\n  return errors;\n};\n_c = RegisterValidation;\nexport default RegisterValidation;\nvar _c;\n$RefreshReg$(_c, \"RegisterValidation\");","map":{"version":3,"names":["RegisterValidation","values","errors","name","trim","email","test","phoneNumber","password","_c","$RefreshReg$"],"sources":["E:/Web_Data_Management/Project_Code/wdm_project/urm_app/src/pages/RegisterValidation.js"],"sourcesContent":["const RegisterValidation = (values) => {\r\n    const errors = {};\r\n\r\n    // Validate name field\r\n    if (!values.name.trim()) {\r\n        errors.name = \"Name is required\";\r\n    }\r\n\r\n    // Validate email field\r\n    if (!values.email.trim()) {\r\n        errors.email = \"Email is required\";\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(values.email)) {\r\n        errors.email = \"Invalid email format\";\r\n    }\r\n\r\n    //validate phone number field\r\n    if (!values.phoneNumber) {\r\n        errors.phoneNumber = \"Phone number is required\";\r\n    } else if (!/^[0-9]{10}$/.test(values.phoneNumber)) {\r\n        errors.phoneNumber = \"Invalid phone number format\";\r\n    }\r\n\r\n    // Validate password field\r\n    if (!values.password) {\r\n        errors.password = \"Password is required\";\r\n    } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/.test(values.password)) {\r\n        errors.password = \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, and one number\";\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default RegisterValidation;\r\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAIC,MAAM,IAAK;EACnC,MAAMC,MAAM,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAI,CAACD,MAAM,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;IACrBF,MAAM,CAACC,IAAI,GAAG,kBAAkB;EACpC;;EAEA;EACA,IAAI,CAACF,MAAM,CAACI,KAAK,CAACD,IAAI,CAAC,CAAC,EAAE;IACtBF,MAAM,CAACG,KAAK,GAAG,mBAAmB;EACtC,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAACC,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAE;IACzDH,MAAM,CAACG,KAAK,GAAG,sBAAsB;EACzC;;EAEA;EACA,IAAI,CAACJ,MAAM,CAACM,WAAW,EAAE;IACrBL,MAAM,CAACK,WAAW,GAAG,0BAA0B;EACnD,CAAC,MAAM,IAAI,CAAC,aAAa,CAACD,IAAI,CAACL,MAAM,CAACM,WAAW,CAAC,EAAE;IAChDL,MAAM,CAACK,WAAW,GAAG,6BAA6B;EACtD;;EAEA;EACA,IAAI,CAACN,MAAM,CAACO,QAAQ,EAAE;IAClBN,MAAM,CAACM,QAAQ,GAAG,sBAAsB;EAC5C,CAAC,MAAM,IAAI,CAAC,iDAAiD,CAACF,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,EAAE;IACjFN,MAAM,CAACM,QAAQ,GAAG,yGAAyG;EAC/H;EAEA,OAAON,MAAM;AACjB,CAAC;AAACO,EAAA,GA9BIT,kBAAkB;AAgCxB,eAAeA,kBAAkB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}